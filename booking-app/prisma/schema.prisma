// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Room {
  id    Int     @id @default(autoincrement())
  roomId Int @unique
  name  String
  capacity String 
  calendarIdDev String
  calendarIdProd String
}

model Booking {
  id    Int     @id @default(autoincrement())
  roomId Int
  email String
  startDate	DateTime
  endDate DateTime
  firstName String
  lastName String
  secondaryName	String
  nNumber	String
  netId	String
  phoneNumber	String
  department String
  role String
  sponsorFirstName String
  sponsorLastName String
  sponsorEmail String
  title String
  description String
  reservationType String
  expectedAttendance Int
  attendeeAffiliation	 String
  roomSetup	 String
  setupDetails	 String
  mediaServices	 String
  mediaServicesDetails	 String
  catering	 String
  cateringService	 String
  hireSecurity	 String
  chartFieldForCatering String	
  chartFieldForSecurity	 String
  chartFieldForRoomSetup	 String
  bookingStatus BookingStatus?
}

model BookingStatus {
  id    Int     @id @default(autoincrement())
  email String
  requestedAt	DateTime
  firstApprovedAt		DateTime
  secondApprovedAt		DateTime
  rejectedAt		DateTime
  canceledAt		DateTime
  checkedInAt		DateTime
  noShowedAt		DateTime
  finalApprovedAt	DateTime																
  booking Booking @relation(fields: [bookingId], references: [id])
  bookingId Int @unique
}

model AdminUser {
  email	String @unique
  createdAt DateTime
}

model PaUser {
  email	String @unique
  createdAt DateTime
}

model SafetyTrainingUser {
  email	String @unique
  createdAt DateTime
}

model BannedUser {
  email	String @unique
  createdAt DateTime
}

model Liaison {
  email	String @unique
  department Department @relation(fields: [departmentId], references: [id])
  departmentId Int
  createdAt DateTime
}

model Department {
  id    Int     @id @default(autoincrement())
  name  String
  liaisons Liaison[]
}

model reservationType {
  name String @unique
  createdAt DateTime
}

model Setting {
  id    Int     @id @default(autoincrement())
  key  String
  value String
  createdAt DateTime
}